{"version":3,"sources":["Components/card/card-component.js","Components/card-list/card-list.js","Components/serch-box/serch-box.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monsters","id","name","email","CardiList","map","SerchBox","placeholder","handleChange","type","onChange","App","state","serchField","fetch","then","response","json","users","setState","this","filteredMonster","filter","toLowerCase","includes","toLocaleLowerCase","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAGaA,EAAM,SAACC,GAAD,OACf,sBAAKC,UAAW,iBAAhB,UACI,qBAAKC,IAAK,UAAUC,IAAG,+BAA4BH,EAAMI,SAASC,GAA3C,4BACvB,+BAAKL,EAAMI,SAASE,KAApB,OACA,4BAAIN,EAAMI,SAASG,YCFdC,G,MAAY,SAACR,GACtB,OAAO,qBAAKC,UAAY,YAAjB,SAEHD,EAAMI,SAASK,KAAI,SAAAL,GAAQ,OAC3B,cAAC,EAAD,CAA0BA,SAAUA,GAAvBA,EAASC,WCLjBK,G,MAAW,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACpB,uBACAX,UAAY,SACRY,KAAK,QACLF,YAAaA,EACbG,SAAWF,MC8BJG,E,kDAlCb,aAAc,IAAD,8BACX,gBACKC,MAAQ,CACXZ,SAAS,GACTa,WAAY,IAJH,E,qDAQb,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACnB,SAAWkB,S,oBAE3C,WAAS,IAAD,OACN,EAAgCE,KAAKR,MAA9BZ,EAAP,EAAOA,SAAUa,EAAjB,EAAiBA,WACXQ,EAAkBrB,EAASsB,QAAO,SAAAtB,GAAQ,OAC7CA,EAASE,KAAKqB,cAAcC,SAASX,EAAWY,wBACjD,OACE,sBAAK5B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACCU,YAAY,kBACZC,aACC,SAAAkB,GAAC,OAAG,EAAKP,SAAS,CAACN,WAAYa,EAAEC,OAAOC,WAI1C,cAAC,EAAD,CAAW5B,SAAWqB,W,GA5BdQ,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9ea81d12.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card-component.css';\r\n\r\nexport const Card= (props) => (\r\n    <div className= 'card-container'>\r\n        <img alt= \"monster\" src = {`https://robohash.org/${props.monsters.id}?set=set2&size=180x180`}/>\r\n        <h2>{props.monsters.name} </h2>\r\n        <p>{props.monsters.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\nimport {Card} from '../card/card-component.js';\r\nimport './card-list.css';\r\n\r\n\r\nexport const CardiList = (props) => { \r\n    return <div className = 'card-list'>\r\n    {   \r\n        props.monsters.map(monsters => (\r\n        <Card key = {monsters.id} monsters={monsters}/>\r\n        ))} \r\n    </div>;\r\n    \r\n};","import React from 'react';\r\n\r\nimport './serch-box.css';\r\n\r\nexport const SerchBox = ({placeholder, handleChange }) => (\r\n    <input \r\n    className = 'search'\r\n        type='serch'\r\n        placeholder={placeholder}\r\n        onChange={ handleChange }\r\n          />\r\n)\r\n","import './App.css';\nimport {CardiList} from './Components/card-list/card-list.js';\nimport  {Component} from 'react';\nimport {SerchBox} from './Components/serch-box/serch-box.js';\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {\n      monsters:[],\n      serchField: ''\n    };\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters : users}));\n  }\n  render(){\n    const {monsters, serchField} =  this.state;\n    const filteredMonster = monsters.filter(monsters =>\n       monsters.name.toLowerCase().includes(serchField.toLocaleLowerCase()))\n      return (\n        <div className=\"App\">\n          <h1>Monster Rolodex</h1>\n          <SerchBox\n           placeholder=' Serch Monsters' \n           handleChange = {\n            e=> this.setState({serchField: e.target.value})\n            }\n\n          />\n          <CardiList monsters ={filteredMonster}>\n          </CardiList>\n        </div>\n      );\n    }\n  }\n  \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}